Spring MVC Framework follows the Model-View-Controller design pattern. 
It is used to develop web applications. It works around DispatcherServlet.
DispatcherServlet handles all the HTTP requests and responses.
It dispatches the requests to handlers. It uses @Controller and @RequestMapping as default request handlers. 
The @Controller annotation defines that a particular class is a controller.
@RequestMapping annotation maps web requests to Spring Controller methods. The terms model, view, and controller are as follows:

Model: The Model encapsulates the application data.
View: View renders the model data and also generates HTML output that the clientâ€™s browser can interpret.
Controller: The Controller processes the user requests and passes them to the view for rendering.
Spring MVC Framework works as follows:

All the incoming requests are intercepted by the DispatcherServlet that works as the front controller.
The DispatcherServlet then gets an entry of handler mapping from the XML file and forwards the request to the controller.
The object of ModelAndView is returned by the controller.
The DispatcherServlet checks the entry of the view resolver in the XML file and invokes the appropriate view component.